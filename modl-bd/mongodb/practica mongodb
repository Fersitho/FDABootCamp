-- ¿Cuantos restaurantes tiene esta colección?
db.restaurantes.find().count()

-- Mostrar los campos restaurant_id, nombre, distrito y cocina, pero excluyendo el campo _id que “cuisine” sea ‘Bakery’
db.restaurantes.find(
    {'cuisine': 'Bakery'},
    {_id: 0, restaurant_id: 1, name: 1, borough:1 , cuisine: 1}
)

-- Mostrar todos los restaurantes que se encuentran en el distrito Bronx:
db.restaurantes.find(
    {'borough': 'Bronx'}
)

4 -- Mostrar los primeros 5 restaurantes que se encuentran en el distrito Bronx:
db.restaurantes.find(
    {'borough': 'Bronx'}
).limit(5)

5-- Mostrar los próximos 5 restaurantes después de omitir los primeros 5 que se encuentran en el distrito Bronx:
db.restaurantes.find(
    {'borough': 'Bronx'}
).skip(5).limit(5)

6-- Encontrar los restaurantes que lograron una puntuación superior a 90:
db.restaurantes.find(
    {'grades.score': {$gt:90}}
)

7-- Encontrar los restaurantes que lograron una puntuación superior a 80 pero inferior a 100:
db.restaurantes.find(
    {'grades.score': {$gt: 80, $lt: 100}}
)

8-- Encontrar los restaurantes que se ubican en un valor de latitud inferior a -95.754168:
db.restaurantes.find(
    {'address.coord.0': {$lt: -95.754168}}
)

9-- Encontrar los restaurantes que no preparan ninguna cocina estadounidense y su puntaje de calificación es superior a 70 y la latitud es inferior a -65.754168:
db.restaurantes.find(
    { $and: [
        {'cuisine': {$ne: 'American '}},
        {'grades.score': {$not: {$lt: 70}}},
        {'address.coord.0': {$lt: -65.754168}}
    ]})

10-- Encontrar los restaurantes que no preparan ninguna cocina estadounidense y lograron una puntuación superior a 70 y se ubicaron en una longitud inferior a -65.754168. Realiza esta consulta sin usar el operador "$and":
db.restaurantes.find(
    {
        'cuisine': {$ne: 'American '},
        'grades.score': {$gt: 70},
        'address.coord.0': {$lt: -65.754168}
    }
    
)

11--  Encontrar los restaurantes que no preparan ninguna cocina estadounidense y lograron calificación 'A' que no pertenece al distrito de Brooklyn. El documento debe mostrarse según la cocina en orden descendente:
db.restaurantes.find(
    {
        'cuisine': {$ne: 'American '},
        'grades.grade': 'A',
        'borough': {$ne: 'Brooklyn'}
    }
).sort({'cuisine': -1})

12-- Encontrar la identificación, el nombre, el distrito y la cocina del restaurante para aquellos restaurantes que contienen 'Wil' como las tres primeras letras de sun nombre.
db.restaurantes.find(
   {'name': {$regex: /^Wil.*/}},
   {restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }
)

13-- Encontrar la identificación, el nombre, el distrito y la cocina del restaurante para aquellos restaurantes que contienen 'ces' como las últimas tres letras de su nombre.
db.restaurantes.find(
   {'name': {$regex: /ces$/}},
   {restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }
)

14-- Encontrar la identificación, el nombre, el distrito y la cocina del restaurante para aquellos restaurantes que contienen 'Reg' en alguna parte de su nombre.
db.restaurantes.find(
   {'name': {$regex: /Reg/}},
   {restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }
)

16-- Encontrar los restaurantes que pertenecen al distrito Bronx y preparan platos estadounidenses o chinos
db.restaurantes.find(
   {'borough': 'Bronx', $or:[
    {'cuisine': 'American'},
    {'cuisine': 'Chinese'}
   ]},
)
db.restaurantes.find({ borough: "Bronx", cuisine: { $in: ["American", "Chinese"] } })
17--  Encontrar la identificación del restaurante, el nombre, el distrito y la cocina para aquellos restaurantes que pertenecen al distrito de Staten Island o Queens o Bronx o Brooklyn.
db.restaurantes.find(
    {
     'borough': {$in: ['Staten Island', 'Queens', 'Bronx', 'Brooklyn']}
    },
    {restaurant_id: 1, name: 1, borough: 1, cuisine: 1}
)

18-- Encontrar la identificación, el nombre, el distrito y la cocina del restaurante para aquellos restaurantes que no pertenecen al distrito Staten Island o Queens o Bronx o Brooklyn.
db.restaurantes.find(
    {'borough': {$nin: ['Staten Island', 'Queens', 'Bronx', 'Brooklyn']}},
    {name: 1, borough: 1, cuisine: 1}
)

19-- Encontrar el _id del restaurante, el nombre, el distrito y la cocina de aquellos restaurantes que lograron una puntuación que no supere los 10.
db.restaurantes.find(
    {'grades.score': {$lte: 10}},
    {name: 1, borough: 1, cuisine: 1}
)

20--  Encontrar la identificación, el nombre, el distrito y la cocina del restaurante para aquellos restaurantes que prepararon platos excepto 'American' y 'Chinees' o el nombre del restaurante comienza con la letra 'Wil'
db.restaurantes.find(
    {$and: [
        {'cuisine': { $nin: ['American', 'Chinees']}},
        { 'name': {$regex: /^Wil/}}
    ]},
     {
    restaurant_id: 1,
    name: 1,
    'address.district': 1,
    cuisine: 1
}
)

-- Encontrar la identificación, el nombre y las calificaciones del restaurante para aquellos restaurantes que obtuvieron una calificación de "A" y obtuvieron un puntaje de 11 para la fecha ISO "2014-08-11T00:00:00Z".


-- Encontrar la identificación, el nombre, la dirección y la ubicación geográfica delrestaurante para aquellos restaurantes donde el segundo elemento de la matriz "coord" contiene un valor que es más de 42 y hasta 52.


-- Consulta para encontrar el nombre del restaurante, distrito, longitud y latitud y cocina para aquellos restaurantes que contienen 'mon' en alguna parte de su nombre:


-- Consulta para encontrar el nombre del restaurante, distrito, longitud y latitud y cocina para aquellos restaurantes que contienen 'Mad' como las tres primeras letras de su nombre:


-- Obtener el tipo de cocina que más se repita


-- Obtener el nombre del restaurante que tenga la media más alta.



